{% extends 'base.html.twig' %}

{% block title %}Gestion des Bons{% endblock %}

{% block stylesheets %}
<style>
    .table th {
        font-weight: 600;
    }
    
    .bon-card {
        transition: all 0.3s ease;
        border-left: 3px solid transparent;
    }
    
    .bon-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        border-left: 3px solid #3b82f6;
    }
    
    .status-badge {
        font-weight: 500;
        padding: 0.35rem 0.65rem;
    }
    
    .bon-type-badge {
        position: absolute;
        top: 0;
        right: 0;
        border-radius: 0;
        border-bottom-left-radius: 0.5rem;
        font-size: 0.75rem;
        font-weight: 600;
        letter-spacing: 0.5px;
    }
    
    .bon-sortie {
        border-top: 3px solid #ef4444;
    }
    
    .bon-entree {
        border-top: 3px solid #10b981;
    }
    
    .bon-transfert {
        border-top: 3px solid #f59e0b;
    }
    
    .search-wrapper {
        position: relative;
    }
    
    .search-wrapper i {
        position: absolute;
        top: 50%;
        left: 1rem;
        transform: translateY(-50%);
        color: #6b7280;
    }
    
    .search-input {
        padding-left: 2.5rem;
        border-radius: 50rem;
    }
    
    .btn-filter.active {
        background-color: #3b82f6;
        color: white;
    }
    
    .actions-dropdown {
        min-width: unset;
        width: auto;
    }
    
    /* Animation pour les nouveaux bons */
    @keyframes highlightNew {
        0% { background-color: rgba(59, 130, 246, 0.1); }
        100% { background-color: transparent; }
    }
    
    .bon-card.new-bon {
        animation: highlightNew 2s ease-out;
    }
</style>
{% endblock %}

{% block body %}
<div class="container-fluid px-4 py-3">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3">Gestion des Bons</h1>
        <div>
            <a href="{{ path('app_bon_new') }}" class="btn btn-primary">
                <i class="bi bi-plus-circle me-2"></i>Nouveau Bon
            </a>
        </div>
    </div>
    
    <div class="card shadow-sm mb-4">
        <div class="card-header bg-white py-3">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h5 class="card-title mb-0">Liste des Bons</h5>
                </div>
                <div class="col-md-6">
                    <div class="d-flex justify-content-end">
                        <div class="search-wrapper me-2">
                            <i class="bi bi-search"></i>
                            <input type="text" class="form-control form-control-sm search-input" id="bonSearch" placeholder="Rechercher...">
                        </div>
                        <div class="btn-group" role="group">
                            <button type="button" class="btn btn-outline-secondary btn-sm btn-filter active" data-filter="all">Tous</button>
                            <button type="button" class="btn btn-outline-secondary btn-sm btn-filter" data-filter="sortie">Sortie</button>
                            <button type="button" class="btn btn-outline-secondary btn-sm btn-filter" data-filter="entree">Entrée</button>
                            <button type="button" class="btn btn-outline-secondary btn-sm btn-filter" data-filter="transfert">Transfert</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body">
            {% if bons is empty %}
                <div class="alert alert-info">
                    <i class="bi bi-info-circle me-2"></i>
                    Aucun bon n'a été créé pour le moment. Cliquez sur "Nouveau Bon" pour en ajouter un.
                </div>
            {% else %}
                <div class="table-responsive">
                    <table class="table table-hover" id="bonsTable">
                        <thead>
                            <tr>
                                <th>Numéro</th>
                                <th>Type</th>
                                <th>Date</th>
                                <th>Chantier</th>
                                <th>Nombre d'Articles</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for bon in bons %}
                                <tr class="bon-row" data-type="{{ bon.type|lower }}">
                                    <td>{{ bon.numero_serie }}</td>
                                    <td>
                                        {% if bon.type == 'Sortie' %}
                                            <span class="badge bg-danger">Sortie</span>
                                        {% elseif bon.type == 'Entrée' %}
                                            <span class="badge bg-success">Entrée</span>
                                        {% else %}
                                            <span class="badge bg-warning text-dark">Transfert</span>
                                        {% endif %}
                                    </td>
                                    <td>{{ bon.date|date('d/m/Y') }}</td>
                                    <td>{{ bon.chantier ? bon.chantier.nom : 'N/A' }}</td>
                                    <td>{{ bon.bonDetails|length }}</td>
                                    <td>
                                        <div class="btn-group">
                                            <a href="{{ path('app_bon_show', {'id': bon.id}) }}" class="btn btn-sm btn-outline-primary">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <a href="{{ path('app_bon_edit', {'id': bon.id}) }}" class="btn btn-sm btn-outline-secondary">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                            <button type="button" class="btn btn-sm btn-outline-danger delete-bon-btn" data-id="{{ bon.id }}" data-serie="{{ bon.numero_serie }}">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            {% endif %}
        </div>
    </div>
    
    <!-- Vue alternative des bons en cartes -->
    <div class="card shadow-sm">
        <div class="card-header bg-white py-3">
            <h5 class="card-title mb-0">Vue des Bons par Carte</h5>
        </div>
        <div class="card-body">
            {% if bons is empty %}
                <div class="alert alert-info">
                    <i class="bi bi-info-circle me-2"></i>
                    Aucun bon n'a été créé pour le moment.
                </div>
            {% else %}
                <div class="row" id="bonsCards">
                    {% for bon in bons %}
                        <div class="col-lg-3 col-md-6 mb-4 bon-card-container" data-type="{{ bon.type|lower }}">
                            <div class="card shadow-sm bon-card bon-{{ bon.type|lower }}">
                                <div class="card-body position-relative">
                                    {% if bon.type == 'Sortie' %}
                                        <span class="badge bg-danger bon-type-badge">Sortie</span>
                                    {% elseif bon.type == 'Entrée' %}
                                        <span class="badge bg-success bon-type-badge">Entrée</span>
                                    {% else %}
                                        <span class="badge bg-warning text-dark bon-type-badge">Transfert</span>
                                    {% endif %}
                                    
                                    <h5 class="card-title mt-2">Bon #{{ bon.numero_serie }}</h5>
                                    <div class="mb-3">
                                        <small class="text-muted d-block">Date: {{ bon.date|date('d/m/Y') }}</small>
                                        <small class="text-muted d-block">Chantier: {{ bon.chantier ? bon.chantier.nom : 'N/A' }}</small>
                                        <small class="text-muted d-block">Articles: {{ bon.bonDetails|length }}</small>
                                    </div>
                                    
                                    <div class="mt-3">
                                        <a href="{{ path('app_bon_show', {'id': bon.id}) }}" class="btn btn-sm btn-outline-primary me-2">
                                            <i class="bi bi-eye"></i> Voir
                                        </a>
                                        <a href="{{ path('app_bon_edit', {'id': bon.id}) }}" class="btn btn-sm btn-outline-secondary">
                                            <i class="bi bi-pencil"></i> Modifier
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            {% endif %}
        </div>
    </div>
</div>

<!-- Modal de confirmation de suppression -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Confirmation de Suppression</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Êtes-vous sûr de vouloir supprimer le bon <strong id="bonSerieToDelete"></strong> ?</p>
                <p class="mb-0 text-danger"><i class="bi bi-exclamation-triangle me-2"></i>Cette action est irréversible.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Supprimer</button>
            </div>
        </div>
    </div>
</div>

{% block page_javascripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Filtrage des bons
    const filterButtons = document.querySelectorAll('.btn-filter');
    const bonRows = document.querySelectorAll('.bon-row');
    const bonCards = document.querySelectorAll('.bon-card-container');
    const bonSearch = document.getElementById('bonSearch');
    
    // Gestion du filtre des bons
    filterButtons.forEach(button => {
        button.addEventListener('click', function() {
            const filter = this.getAttribute('data-filter');
            
            // Mise à jour des boutons
            filterButtons.forEach(btn => btn.classList.remove('active'));
            this.classList.add('active');
            
            // Filtre des lignes du tableau
            bonRows.forEach(row => {
                if (filter === 'all' || row.getAttribute('data-type') === filter) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
            
            // Filtre des cartes
            bonCards.forEach(card => {
                if (filter === 'all' || card.getAttribute('data-type') === filter) {
                    card.style.display = '';
                } else {
                    card.style.display = 'none';
                }
            });
        });
    });
    
    // Recherche dans le tableau et les cartes
    bonSearch.addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase();
        
        // Recherche dans le tableau
        bonRows.forEach(row => {
            const text = row.textContent.toLowerCase();
            if (text.includes(searchTerm)) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
        
        // Recherche dans les cartes
        bonCards.forEach(card => {
            const text = card.textContent.toLowerCase();
            if (text.includes(searchTerm)) {
                card.style.display = '';
            } else {
                card.style.display = 'none';
            }
        });
    });
    
    // Gestion de la suppression des bons
    const deleteButtons = document.querySelectorAll('.delete-bon-btn');
    const deleteConfirmModal = new bootstrap.Modal(document.getElementById('deleteConfirmModal'));
    const bonSerieToDelete = document.getElementById('bonSerieToDelete');
    const confirmDeleteBtn = document.getElementById('confirmDelete');
    
    deleteButtons.forEach(button => {
        button.addEventListener('click', function() {
            const bonId = this.getAttribute('data-id');
            const bonSerie = this.getAttribute('data-serie');
            
            bonSerieToDelete.textContent = bonSerie;
            confirmDeleteBtn.setAttribute('data-id', bonId);
            
            deleteConfirmModal.show();
        });
    });
    
    confirmDeleteBtn.addEventListener('click', function() {
        const bonId = this.getAttribute('data-id');
        
        // Appel API pour supprimer le bon
        fetch(`/bon/${bonId}/delete`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Erreur réseau: ' + response.status);
            }
            return response.json();
        })
        .then(data => {
            if (data.success) {
                // Créer une notification de succès
                const toast = document.createElement('div');
                toast.className = 'position-fixed bottom-0 end-0 p-3';
                toast.style.zIndex = '5';
                toast.innerHTML = `
                    <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="toast-header bg-success text-white">
                            <i class="bi bi-check-circle me-2"></i>
                            <strong class="me-auto">Succès</strong>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                        <div class="toast-body">
                            Le bon a été supprimé avec succès.
                        </div>
                    </div>
                `;
                document.body.appendChild(toast);
                
                // Fermer le toast après 3 secondes
                setTimeout(() => {
                    const toastElement = toast.querySelector('.toast');
                    const bsToast = new bootstrap.Toast(toastElement);
                    bsToast.hide();
                }, 3000);
                
                // Fermer le modal
                deleteConfirmModal.hide();
                
                // Recharger la page après un court délai
                setTimeout(() => {
                    window.location.reload();
                }, 1000);
            } else {
                alert('Erreur: ' + (data.message || 'Une erreur est survenue'));
                deleteConfirmModal.hide();
            }
        })
        .catch(error => {
            console.error('Erreur:', error);
            alert('Erreur: ' + error.message);
            deleteConfirmModal.hide();
        });
    });
    
    // Si DataTables est disponible, l'initialiser
    if (typeof $.fn.DataTable !== 'undefined') {
        $('#bonsTable').DataTable({
            language: {
                url: '/js/fr-FR.json'
            },
            pageLength: 10,
            order: [[2, 'desc']] // Tri par date décroissante
        });
    }
});
</script>
{% endblock %}
{% endblock %}
