{% extends 'base.html.twig' %}

{% block title %}Nouvelle Demande d'Achat{% endblock %}

{% block stylesheets %}
<style>
    .article-row {
        transition: all 0.2s;
        border-left: 3px solid transparent;
    }
    .article-row:hover {
        background-color: #f8f9fa;
        border-left: 3px solid #3b82f6;
    }
    .delete-row {
        cursor: pointer;
        transition: all 0.2s;
    }
    .delete-row:hover {
        color: #dc3545;
    }
    .fournisseur-input, .quantite-input, .prix-input {
        border: none;
        border-bottom: 1px solid #dee2e6;
        border-radius: 0;
        padding: 0.25rem;
        transition: all 0.2s;
    }
    .fournisseur-input:focus, .quantite-input:focus, .prix-input:focus {
        border-bottom: 2px solid #3b82f6;
        box-shadow: none;
    }
    .article-select {
        font-weight: 500;
    }
    .tva-badge {
        cursor: pointer;
        transition: all 0.2s;
    }
    .tva-badge.active {
        background-color: #3b82f6 !important;
        color: white;
    }
</style>
{% endblock %}

{% block body %}
<div class="container-fluid px-4 py-3">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3">Créer une Nouvelle Demande d'Achat</h1>
        <a href="{{ path('app_demand_achat') }}" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left me-2"></i>Retour à la liste
        </a>
    </div>
    
    <div class="row">
        <div class="col-md-12">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-white py-3">
                    <h5 class="card-title mb-0">Informations de la Demande</h5>
                </div>
                <div class="card-body">
                    <form id="demandeForm">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="date" class="form-label">Date</label>
                                <input type="date" class="form-control" id="date" name="date" required value="{{ 'now'|date('Y-m-d') }}">
                            </div>
                            <div class="col-md-6">
                                <label for="etat" class="form-label">État</label>
                                <select class="form-select" id="etat" name="etat" required>
                                    <option value="En attente">En attente</option>
                                    <option value="Approuvée">Approuvée</option>
                                    <option value="Rejetée">Rejetée</option>
                                </select>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-white py-3 d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">Articles à Commander</h5>
                    <button type="button" class="btn btn-sm btn-primary" id="addArticleBtn">
                        <i class="bi bi-plus-circle me-1"></i>Ajouter un Article
                    </button>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table" id="articlesTable">
                            <thead>
                                <tr>
                                    <th style="width: 30%">Article</th>
                                    <th style="width: 20%">Fournisseur</th>
                                    <th style="width: 15%">Quantité</th>
                                    <th style="width: 15%">Prix Unitaire</th>
                                    <th style="width: 15%">Total</th>
                                    <th style="width: 5%"></th>
                                </tr>
                            </thead>
                            <tbody id="articlesBody">
                                <!-- Les lignes d'articles seront ajoutées ici dynamiquement -->
                            </tbody>
                        </table>
                    </div>
                    
                    <div class="alert alert-info mt-3" id="emptyArticlesMessage">
                        <i class="bi bi-info-circle me-2"></i>
                        Aucun article n'a été ajouté à cette demande. Cliquez sur "Ajouter un Article" pour commencer.
                    </div>
                </div>
            </div>
            
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-white py-3">
                    <h5 class="card-title mb-0">Récapitulatif</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">TVA</label>
                                <div class="d-flex">
                                    <span class="badge bg-light text-dark me-2 p-2 tva-badge" data-tva="0">0%</span>
                                    <span class="badge bg-light text-dark me-2 p-2 tva-badge active" data-tva="20">20%</span>
                                    <span class="badge bg-light text-dark me-2 p-2 tva-badge" data-tva="14">14%</span>
                                    <span class="badge bg-light text-dark p-2 tva-badge" data-tva="10">10%</span>
                                </div>
                                <input type="hidden" id="tva" name="tva" value="20">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3 text-end">
                                <div class="d-flex justify-content-between mb-2">
                                    <span class="fw-bold">Total HT:</span>
                                    <span id="totalHT">0.00 DH</span>
                                </div>
                                <div class="d-flex justify-content-between mb-2">
                                    <span class="fw-bold">TVA (<span id="tvaPercent">20</span>%):</span>
                                    <span id="totalTVA">0.00 DH</span>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <span class="fw-bold">Total TTC:</span>
                                    <span id="totalTTC" class="h5 text-primary mb-0">0.00 DH</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="text-end mb-4">
                <button type="button" class="btn btn-secondary me-2">Annuler</button>
                <button type="button" class="btn btn-primary" id="saveDemandeBtn">Enregistrer la Demande</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Sélection d'Article -->
<div class="modal fade" id="articleModal" tabindex="-1" aria-labelledby="articleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="articleModalLabel">Sélectionner un Article</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <input type="text" class="form-control" id="articleSearch" placeholder="Rechercher un article...">
                </div>
                <div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
                    <table class="table table-hover" id="articlesModalTable">
                        <thead class="sticky-top bg-light">
                            <tr>
                                <th>Référence</th>
                                <th>Nom</th>
                                <th>Marque</th>
                                <th>Prix</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for article in articles %}
                                <tr>
                                    <td>{{ article.reference }}</td>
                                    <td>{{ article.nom }}</td>
                                    <td>{{ article.marque }}</td>
                                    <td>{{ article.prix|number_format(2, ',', ' ') }} DH</td>
                                    <td>
                                        <button type="button" class="btn btn-sm btn-primary select-article" 
                                                data-id="{{ article.id }}" 
                                                data-reference="{{ article.reference }}" 
                                                data-nom="{{ article.nom }}" 
                                                data-prix="{{ article.prix }}">
                                            Sélectionner
                                        </button>
                                    </td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
            </div>
        </div>
    </div>
</div>

{% block page_javascripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const articleModal = new bootstrap.Modal(document.getElementById('articleModal'));
    const articlesBody = document.getElementById('articlesBody');
    const emptyArticlesMessage = document.getElementById('emptyArticlesMessage');
    const addArticleBtn = document.getElementById('addArticleBtn');
    const articleSearch = document.getElementById('articleSearch');
    const tvaBadges = document.querySelectorAll('.tva-badge');
    const tvaInput = document.getElementById('tva');
    const tvaPercent = document.getElementById('tvaPercent');
    const totalHT = document.getElementById('totalHT');
    const totalTVA = document.getElementById('totalTVA');
    const totalTTC = document.getElementById('totalTTC');
    const saveDemandeBtn = document.getElementById('saveDemandeBtn');
    
    let articles = [];
    
    // Fonction pour afficher/masquer le message d'articles vides
    function toggleEmptyMessage() {
        if (articles.length === 0) {
            emptyArticlesMessage.style.display = 'block';
        } else {
            emptyArticlesMessage.style.display = 'none';
        }
    }
    
    // Fonction pour mettre à jour les totaux
    function updateTotals() {
        let totalHtValue = 0;
        
        articles.forEach(article => {
            const prixTotal = article.quantite * article.prix;
            totalHtValue += prixTotal;
        });
        
        const tvaValue = parseFloat(tvaInput.value);
        const totalTvaValue = totalHtValue * (tvaValue / 100);
        const totalTtcValue = totalHtValue + totalTvaValue;
        
        totalHT.textContent = totalHtValue.toFixed(2) + ' DH';
        totalTVA.textContent = totalTvaValue.toFixed(2) + ' DH';
        totalTTC.textContent = totalTtcValue.toFixed(2) + ' DH';
    }
    
    // Fonction pour ajouter un article à la table
    function addArticleToTable(article) {
        const newRow = document.createElement('tr');
        newRow.className = 'article-row';
        newRow.dataset.id = article.id;
        newRow.innerHTML = `
            <td class="article-select">
                ${article.nom} <small class="text-muted d-block">${article.reference}</small>
            </td>
            <td>
                <input type="text" class="form-control fournisseur-input" value="${article.fournisseur}" placeholder="Fournisseur">
            </td>
            <td>
                <input type="number" class="form-control quantite-input" value="${article.quantite}" min="1">
            </td>
            <td>
                <input type="number" class="form-control prix-input" value="${article.prix}" min="0.01" step="0.01">
            </td>
            <td class="article-total">${(article.quantite * article.prix).toFixed(2)} DH</td>
            <td>
                <i class="bi bi-x-circle delete-row"></i>
            </td>
        `;
        
        articlesBody.appendChild(newRow);
        
        // Ajouter les écouteurs d'événements
        const quantiteInput = newRow.querySelector('.quantite-input');
        const prixInput = newRow.querySelector('.prix-input');
        const fournisseurInput = newRow.querySelector('.fournisseur-input');
        const deleteBtn = newRow.querySelector('.delete-row');
        const totalCell = newRow.querySelector('.article-total');
        
        // Mise à jour de la quantité
        quantiteInput.addEventListener('change', function() {
            const index = articles.findIndex(a => a.id === article.id);
            if (index !== -1) {
                articles[index].quantite = parseInt(this.value) || 1;
                totalCell.textContent = (articles[index].quantite * articles[index].prix).toFixed(2) + ' DH';
                updateTotals();
            }
        });
        
        // Mise à jour du prix
        prixInput.addEventListener('change', function() {
            const index = articles.findIndex(a => a.id === article.id);
            if (index !== -1) {
                articles[index].prix = parseFloat(this.value) || article.prix;
                totalCell.textContent = (articles[index].quantite * articles[index].prix).toFixed(2) + ' DH';
                updateTotals();
            }
        });
        
        // Mise à jour du fournisseur
        fournisseurInput.addEventListener('change', function() {
            const index = articles.findIndex(a => a.id === article.id);
            if (index !== -1) {
                articles[index].fournisseur = this.value;
            }
        });
        
        // Suppression de l'article
        deleteBtn.addEventListener('click', function() {
            const index = articles.findIndex(a => a.id === article.id);
            if (index !== -1) {
                articles.splice(index, 1);
                newRow.remove();
                toggleEmptyMessage();
                updateTotals();
            }
        });
    }
    
    // Afficher le modal pour ajouter un article
    addArticleBtn.addEventListener('click', function() {
        articleModal.show();
    });
    
    // Recherche d'articles dans le modal
    articleSearch.addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase();
        const rows = document.querySelectorAll('#articlesModalTable tbody tr');
        
        rows.forEach(row => {
            const reference = row.cells[0].textContent.toLowerCase();
            const name = row.cells[1].textContent.toLowerCase();
            const marque = row.cells[2].textContent.toLowerCase();
            
            if (reference.includes(searchTerm) || name.includes(searchTerm) || marque.includes(searchTerm)) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    });
    
    // Sélection d'un article dans le modal
    document.querySelectorAll('.select-article').forEach(button => {
        button.addEventListener('click', function() {
            const id = this.dataset.id;
            const reference = this.dataset.reference;
            const nom = this.dataset.nom;
            const prix = parseFloat(this.dataset.prix);
            
            // Vérifier si l'article est déjà dans la liste
            if (articles.some(a => a.id === id)) {
                alert('Cet article est déjà dans la liste.');
                return;
            }
            
            const article = {
                id: id,
                reference: reference,
                nom: nom,
                prix: prix,
                quantite: 1,
                fournisseur: ''
            };
            
            articles.push(article);
            addArticleToTable(article);
            toggleEmptyMessage();
            updateTotals();
            articleModal.hide();
        });
    });
    
    // Gestion des badges TVA
    tvaBadges.forEach(badge => {
        badge.addEventListener('click', function() {
            tvaBadges.forEach(b => b.classList.remove('active'));
            this.classList.add('active');
            const tvaValue = this.dataset.tva;
            tvaInput.value = tvaValue;
            tvaPercent.textContent = tvaValue;
            updateTotals();
        });
    });
    
    // Enregistrement de la demande
    saveDemandeBtn.addEventListener('click', function() {
        if (articles.length === 0) {
            alert('Veuillez ajouter au moins un article à la demande.');
            return;
        }
        
        const demandeData = {
            date: document.getElementById('date').value,
            etat: document.getElementById('etat').value,
            tva: parseInt(tvaInput.value),
            articles: articles.map(article => ({
                articleId: article.id,
                quantite: article.quantite,
                fournisseur: article.fournisseur,
                prixUnitaire: article.prix
            }))
        };
        
        console.log('Données de la demande:', demandeData);
        // Ici, vous ajouterez le code pour envoyer les données au serveur
        alert('Fonctionnalité à implémenter: envoi des données au serveur.');
    });
    
    // Initialisation
    toggleEmptyMessage();
    updateTotals();
});
</script>
{% endblock %}
{% endblock %}
